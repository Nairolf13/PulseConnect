{% extends "../layouts/base.twig" %}

{% block style %}
	<link rel="stylesheet" href="/../../assets/css/home.css">
{% endblock %}

{% block title %}
	<title>{{title}}</title>
{% endblock %}

{% block main %}
	{% include "../partials/header.twig" %}
	<div class="headerRes">
		<section>
			<a href="/personalContent"><img src="{{ users.picture }}" alt="Photo de profil" class="profile-pic" onerror="this.src='/../../assets/imgs/Pp.webp'"/></a>
		</section>
	</div>
	<section>
		<div class="container">
			<h2>Nouveaut√©</h2>
			<ul>
				{% if contents is empty %}
					<li>Aucun contenu disponible.</li>
				{% else %}
					{% for content in contents %}
						<li>
							<div class="author" id="author-{{ content.id }}">	
								<a href="/personalContent"><img src="{{ content.Users.picture }}" alt="Photo de profil" class="profile-pic" onerror="this.src='/../../assets/imgs/Pp.webp'"/></a>
								<p>{{ content.Users.userName }}</p>
							</div>
							<h2>{{ content.name }}</h2>
							<p>{{ content.description }}</p>

							{% if content.url and (content.url ends with '.mp3' or content.url ends with '.wav' or content.url ends with '.ogg' or content.url ends with '.flac') %}
								<audio controls>
									<source src="./uploads/{{ content.url }}" type="audio/mpeg">
									Votre navigateur ne supporte pas l'√©l√©ment audio.
								</audio>
							{% endif %}

							{% if content.url and (content.url ends with '.mp4' or content.url ends with '.avi' or content.url ends with '.mkv' or content.url ends with '.mov') %}
								<video class="video" controls autoplay muted loop playsinline>
									<source src="./uploads/{{ content.url }}" type="video/mp4">
									Votre navigateur ne supporte pas l'√©l√©ment vid√©o.
								</video>
							{% endif %}

							<div class="interaction">
								<div class="like-section">
									<button type="button" class="like-button" data-asset-id="{{ content.id }}">
										‚ù§
										<span class="like-count">{{ content.likes | length }}</span>
									</button>
								</div>
								<div id="likeModal" class="modal">
									<div class="modal-content">
										<span class="close">&times;</span>
										<h2>Aim√© par</h2>
										<div id="userList"></div>
									</div>
								</div>

								<div class="comment-section">
									<button class="comment-toggle-btn" data-asset-id="{{ content.id }}">
										üí¨
										{{ content.commentCount }}
									</button>
								</div>
								<button id="shareButton-{{ content.id }}" class="share-button">
									<img src="/../../assets/imgs/share.png" alt="Partager" style="width: 20px; height: 20px;">
								</button>
							</div>

							<div class="comments-container" id="comments-{{ content.id }}" style="display: none;">
								{% if content.Commentaires is defined and content.Commentaires is not empty %}
									{% for comment in content.Commentaires %}
										<div class="comment" id="comment-{{ comment.id }}">
											<div class="comment-options">
												<button class="options-btn">...</button>
												<div id="optionsModal" class="options-modal" style="display: none;">
													<div class="options-content">
														<button id="closeModalBtn" class="close-modal-btn">√ó</button>
														<p>Que souhaitez-vous faire ?</p>
														<button id="editCommentBtn">Modifier</button>
														<button id="deleteCommentBtn">Supprimer</button>
													</div>
												</div>
											</div>
											<p>
												<strong>{{ comment.Users.userName }}</strong>:
												<span class="comment-content">{{ comment.content }}</span>
											</p>
											<small>{{ comment.created_at|date("d/m/Y H:i") }}</small>

										</div>
									{% endfor %}
								{% else %}
									<p>Aucun commentaire pour le moment.</p>
								{% endif %}

								<form action="/comment/{{ content.id }}" method="POST" class="comment-form">
									<textarea name="commentContent" required></textarea>
									<button type="submit">Ajouter un commentaire</button>
								</form>
							</div>

							<div class="share-section">

								<div id="shareModal-{{ content.id }}" style="display: none;">
									<div class="btn-share" id="shareModal">
										<div class="share-options">
											<button onclick="shareOnFacebook('{{ content.id }}')"><img src="/../../assets/imgs/Facebook.png" alt="Facebook"></button>
											<button onclick="shareOnTwitter('{{ content.id }}')"><img src="/../../assets/imgs/X.png" alt="Twitter"></button>
											<button onclick="shareOnLinkedIn('{{ content.id }}')"><img src="/../../assets/imgs/linkedin.png" alt="LinkedIn"></button>
											<button onclick="shareOnWhatsApp('{{ content.id }}')"><img src="/../../assets/imgs/whatsApp.png" alt="WhatsApp"></button>
											<button onclick="copyLink('{{ content.id }}')">
												<img src="/../../assets/imgs/copy-link.png" alt="Copy Link">
											</button>

										</div>
									</div>
								</div>
							</div>
							<div id="customModal" class="modal">
								<div class="modal-content">
									<p id="modalMessage"></p>
									<button id="closeModal">OK</button>
								</div>
							</div>
							<div id="deleteModal" class="options-modal" style="display: none;">
								<div class="options-content">
									<p>Voulez-vous vraiment supprimer ce commentaire ?</p>
									<button id="confirmDeleteBtn">Supprimer</button>
									<button id="cancelDeleteBtn">Annuler</button>
								</div>
							</div>
						</li>
					{% endfor %}
				{% endif %}
			</ul>
		</div>
	</section>
	{% include "../partials/error.twig" %}
	{% block script %}
		<script type="module" src="/../../assets/js/home.js"></script>
		<script>
	document.addEventListener("DOMContentLoaded", function () {
    const videos = document.querySelectorAll(".video");

    function checkVisibility() {
        videos.forEach(video => {
            const rect = video.getBoundingClientRect();
            const halfVisible = rect.top < window.innerHeight / 2 && rect.bottom > window.innerHeight / 2;

            if (halfVisible) {
                video.play();
            } else {
                video.pause();
            }
        });
    }

    window.addEventListener("scroll", checkVisibility);
    checkVisibility();

    videos.forEach(video => {
        let touchStartY = 0;
        let touchEndY = 0;
        
        video.dataset.userMuted = video.muted; 

        function enterFullscreen() {
            video.dataset.userMuted = video.muted; 

            if (video.requestFullscreen) {
                video.requestFullscreen();
            } else if (video.webkitRequestFullscreen) {
                video.webkitRequestFullscreen();
            } else if (video.msRequestFullscreen) {
                video.msRequestFullscreen();
            }

            video.muted = false;
            video.volume = 1;
        }

        function exitFullscreen() {
            if (document.fullscreenElement || document.webkitFullscreenElement) {
                if (document.exitFullscreen) {
                    document.exitFullscreen();
                } else if (document.webkitExitFullscreen) {
                    document.webkitExitFullscreen();
                } else if (document.msExitFullscreen) {
                    document.msExitFullscreen();
                }
            }

            video.muted = (video.dataset.userMuted === "true");
            setTimeout(checkVisibility, 500);
        }

        video.addEventListener("click", function () {
            enterFullscreen();
        });

        video.addEventListener("dblclick", function () {
            enterFullscreen();
        });

        document.addEventListener("fullscreenchange", function () {
            if (!document.fullscreenElement) {
                exitFullscreen();
            }
        });

        video.addEventListener("touchstart", function (event) {
            touchStartY = event.touches[0].clientY;
        });

        video.addEventListener("touchmove", function (event) {
            touchEndY = event.touches[0].clientY;
            if (touchEndY - touchStartY > 50) {
                exitFullscreen();
            }
        });
    });

    document.querySelectorAll(".mute-btn").forEach(button => {
        button.addEventListener("click", function (event) {
            let video = this.closest(".video-container").querySelector(".video");

            video.muted = !video.muted;
            video.dataset.userMuted = video.muted.toString(); 

            event.stopPropagation();
        });
    });
});
</script>
	{% endblock %}
{% endblock %}
